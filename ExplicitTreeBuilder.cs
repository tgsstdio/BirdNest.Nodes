//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq.Expressions;

namespace BirdNest.Nodes
{
	public class ExplicitTreeBuilder<T> : IBlackBoardTreeBuilder<T>
		where T : class
	{
		public ExplicitTreeBuilder ()
		{
		}

		public ExplicitTreeBuilder<T> Sequence()
		{
			return this;
		}

		public ExplicitTreeBuilder<T> Sequence(Expression< System.Func<ExplicitTreeBuilder<T>, object[]> > expr)
		{
			return this;
		}


		public ExplicitTreeBuilder<T> Selector()
		{
			return this;
		}

		public ExplicitTreeBuilder<T> Selector(Expression< System.Func<ExplicitTreeBuilder<T>, object[]> > expr)
		{
			return this;
		}

		public ExplicitTreeBuilder<T> Parallel()
		{
			return this;
		}

		public ExplicitTreeBuilder<T> Parallel(Expression< System.Func<ExplicitTreeBuilder<T>, object[]> > expr)
		{
			return this;
		}

		public ExplicitTreeBuilder<T> Decorator(Expression< System.Func<ExplicitTreeBuilder<T>, object>> expr)
		{
			return this;
		}

		ExplicitTreeBuilder<T> Action(System.Func<ExplicitTreeBuilder<T>, object> parameter)
		{
			return this;
		}

		#region IBlackBoardTreeBuilder implementation

		public Tree Build ()
		{
			throw new NotImplementedException ();
		}

		public ITreeBuilder TreeBuilder
		{
			get {
				throw new NotImplementedException ();
			}
			set {
				throw new NotImplementedException ();
			}
		}

		public Blackboard<T> Board
		{
			get {
				throw new NotImplementedException ();
			}
			set {
				throw new NotImplementedException ();
			}
		}

		#endregion
	}
}

