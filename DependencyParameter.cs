//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;

namespace BirdNest.Nodes
{
	public class DependencyParameter<TParent, TChild> : IBlackboardParameter, IBlackboardNode<TParent>
		where TParent : class
		where TChild : class
	{
		private Func<TParent,TChild> mInitFunc;

		#region IBlackboardNode implementation

		public Blackboard<TParent> Board { get; set ; }

		#endregion

		private IBlackboardLinker mLinker;
		private Blackboard<TChild> mChildBoard;
		public DependencyParameter (IBlackboardLinker linker, Func<TParent,TChild> initFunc)
		{
			this.mLinker = linker;
			this.mInitFunc = initFunc;
			this.mChildBoard = new Blackboard<TChild>();
		}

		#region IBlackboardParameter implementation

		public void Assign (INode node)
		{
			if (node is IBlackboardNode<TChild>)
			{
				mLinker.Link<TParent> (this);
				mChildBoard.Context = this.mInitFunc(this.Board.Context);

				IBlackboardNode<TChild> specificNode = node as IBlackboardNode<TChild>;
				specificNode.Board = this.mChildBoard;
			}	
		}

		public void Assign<S> (IBlackboardNode<S> node) where S : class
		{
			if (this is DependencyParameter<TParent,S>) {
				node.Board = this.mChildBoard as Blackboard<S>;
			}
		}

		#endregion
	}
}

